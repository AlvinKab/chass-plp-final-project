import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../services/api_service.dart';
import '../../models/raw_material.dart';

class AddRawMaterialPage extends StatefulWidget {
  @override
  _AddRawMaterialPageState createState() => _AddRawMaterialPageState();
}

class _AddRawMaterialPageState extends State<AddRawMaterialPage> {
  final _formKey = GlobalKey<FormState>();
  final _materialController = TextEditingController();
  final _quantityController = TextEditingController();
  final _pricePerTonController = TextEditingController();
  final _paidAmountController = TextEditingController();

  @override
  void dispose() {
    _materialController.dispose();
    _quantityController.dispose();
    _pricePerTonController.dispose();
    _paidAmountController.dispose();
    super.dispose();
  }

  void _submit() async {
    if (_formKey.currentState!.validate()) {
      final quantity = double.parse(_quantityController.text);
      final pricePerTon = double.parse(_pricePerTonController.text);
      final paidAmount = double.parse(_paidAmountController.text);
      final totalPrice = quantity * pricePerTon;
      final amountOwed = totalPrice - paidAmount;

      final material = RawMaterial(
        id: 0, // Assuming ID is auto-generated by the backend
        material: _materialController.text,
        quantityInTonnes: quantity,
        pricePerTon: pricePerTon,
        totalPrice: totalPrice,
        paidAmount: paidAmount,
        amountOwed: amountOwed,
      );

      final apiService = Provider.of<ApiService>(context, listen: false);
      final response = await apiService.addRawMaterial(material);

      if (response.statusCode == 201) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Raw Material added successfully')),
        );
        Navigator.pop(context);
      } else {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Failed to add raw material')),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text('Add Raw Material'),
        ),
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Form(
              key: _formKey,
              child: ListView(
                children: [
                  TextFormField(
                    controller: _materialController,
                    decoration: InputDecoration(labelText: 'Material'),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return 'Please enter material name';
                      }
                      return null;
                    },
                  ),
                  TextFormField(
                    controller: _quantityController,
                    decoration: InputDecoration(labelText: 'Quantity (tonnes)'),
                    keyboardType: TextInputType.numberWithOptions(decimal: true),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return 'Please enter quantity';
                      }
                      if (double.tryParse(value) == null) {
                        return 'Please enter a valid number';
                      }
                      return null;
                    },
                  ),
                  TextFormField(
                    controller: _pricePerTonController,
                    decoration: InputDecoration(labelText: 'Price per Ton'),
                    keyboardType: TextInputType.numberWithOptions(decimal: true),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return 'Please enter price per ton';
                      }
                      if (double.tryParse(value) == null) {
                        return 'Please enter a valid number';
                      }
                      return null;
                    },
                  ),
                  TextFormField(
                    controller: _paidAmountController,
                    decoration: InputDecoration(labelText: 'Paid Amount'),
                    keyboardType: TextInputType.numberWithOptions(decimal: true),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return 'Please enter paid amount';
                      }
                      if (double.tryParse(value) == null) {
                        return 'Please enter a valid number';
                      }
                      return null;
                    },
                  ),
                  SizedBox(height: 20),
                  ElevatedButton(
                    onPressed: _submit,
                    child: Text('Add Raw Material'),
                  ),
                ],
              )),
        ));
  }
}
